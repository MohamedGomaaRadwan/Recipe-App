// Mocks generated by Mockito 5.4.2 from annotations
// in recipe_app/test/features/favorite/presentaion/view_model/favorite_button/favorite_button_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:recipe_app/core/infrastructure/models/base/failure_result.dart'
    as _i2;
import 'package:recipe_app/features/favorite/domain/usecase/add_favorite.dart'
    as _i5;
import 'package:recipe_app/features/favorite/domain/usecase/is_favorite_usecase.dart'
    as _i3;
import 'package:recipe_app/features/recipes/data/model/recipe_model.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFailureResult_0 extends _i1.SmartFake implements _i2.FailureResult {
  _FakeFailureResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IsFavoriteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsFavoriteUseCase extends _i1.Mock implements _i3.IsFavoriteUseCase {
  MockIsFavoriteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool execute(_i4.RecipeModel? params) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.FailureResult handleError(dynamic error) => (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [error],
        ),
        returnValue: _FakeFailureResult_0(
          this,
          Invocation.method(
            #handleError,
            [error],
          ),
        ),
      ) as _i2.FailureResult);
}

/// A class which mocks [AddFavoriteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddFavoriteUseCase extends _i1.Mock
    implements _i5.AddFavoriteUseCase {
  MockAddFavoriteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void execute(_i4.RecipeModel? params) => super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.FailureResult handleError(dynamic error) => (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [error],
        ),
        returnValue: _FakeFailureResult_0(
          this,
          Invocation.method(
            #handleError,
            [error],
          ),
        ),
      ) as _i2.FailureResult);
}
